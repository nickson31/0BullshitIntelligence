version: '3.8'

services:
  # Main microservice
  intelligence:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
    env_file:
      - ../.env
    volumes:
      - ../app:/app/app:ro
      - ../logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Testing interface (optional)
  testing-ui:
    build:
      context: ../testing_interface
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - intelligence
    restart: unless-stopped
    profiles:
      - testing

volumes:
  redis_data:
  logs:

# Development overrides
# Use with: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
version: '3.8'
services:
  intelligence:
    volumes:
      - ../:/app
    environment:
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    command: ["python", "-m", "uvicorn", "app.api.app:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]